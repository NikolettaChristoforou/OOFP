import org.gradle.api.tasks.testing.logging.TestExceptionFormat
import org.gradle.api.tasks.testing.logging.TestLogEvent

plugins {
    id 'scala'

}


ext {
    scalaMajorVersion = '2.13'
    scalaVersion = "${scalaMajorVersion}.16"
}


repositories {
    flatDir {
        dirs 'lib'
    }

    mavenCentral()
}

sourceSets.main.scala.srcDirs = ['src']
sourceSets.test.scala.srcDirs = ['test']


dependencies {
    implementation "org.scala-lang:scala-library:${scalaVersion}"
    testImplementation 'junit:junit:4.13.2'
    testImplementation("org.scala-lang:scala-reflect") {
        version {
            strictly '2.13.16'
        }
    }
    testImplementation('org.junit.vintage:junit-vintage-engine:5.9.0')
      testImplementation("org.scalatest:scalatest_${scalaMajorVersion}:3.0.9")
}


task zip(type: Zip) {
    group = "prepareZipForSubmit"
    description = "Zip your code for submission to Canvas"

    // To make sure you can always run this task
    outputs.upToDateWhen { false }
    dependsOn assemble
    from fileTree(dir: '.')
    include 'src/warmup/**.scala'

    archiveFileName = 'warmup.zip'
    destinationDirectory = layout.buildDirectory.dir("$projectDir")
}


/* this prints a number between 0.0 and 1.0 to stderr
   for use in codegrade
 */
task fraction(type: JavaExec, dependsOn: classes) {
    // To make sure you can always run this task
    outputs.upToDateWhen { false }
    mainClass = 'warmup.infrastructure.ReportFraction'
    classpath sourceSets.test.runtimeClasspath
    classpath sourceSets.main.runtimeClasspath
}



